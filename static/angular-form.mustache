import {Component, EventEmitter, Input, Output} from '@angular/core';
import {FormBuilder, FormGroup} from '@angular/forms';
import {Validators} from '@angular/forms';
import {FormArray} from '@angular/forms';


export interface {{name}}Input {
    {{#controls}}
    {{modelName}}: any;
    {{/controls}}
}

export interface {{name}}Output {
    {{#controls}}
    {{modelName}}: any;
    {{/controls}}
}

@Component({
    selector: 'app-profile-editor',
    template: `
<form [formGroup]="form" (ngSubmit)="submit()">

{{#controls}}
    <label for="{{modelName}}">{{displayName}}: </label>
    <input id="{{modelName}}" type="text" formControlName="{{modelName}}">
{{/controls}}

    <p>Complete the form to enable button.</p>
    <button type="submit" [disabled]="!form.valid">Submit</button>
</form>

<hr>

<p>Form Value: {{=<% %>=}}{{ form.value | json }}<%={{ }}=%></p>

<p>Form Status: {{=<% %>=}}{{ form.status }}<%={{ }}=%></p>

`,
    styles: [`
form {
    padding-top: 1rem;
}

label {
    display: block;
    margin: .5em 0;
    font-weight: bold;
}
`]
})
export class {{name}}FormComponent {
{{#interface}}
    {{/interface}}
    form: FormGroup;

    @Output('onSubmit') onSubmit = new EventEmitter<{{name}}Output>();
    constructor(private fb: FormBuilder) {
        this.form = this.fb.group({
{{#controls}}
            {{modelName}}:[{{defaultValue}}, [{{#validators}} Validators.{{.}}, {{/validators}}]],
{{/controls}}
        });
    }

    @Input('model')
    set model(value: {{name}}Input) {
        {{name}}Mapper.toForm(value, this.form);
    }




    submit() {
        console.warn(this.form.value);
        this.onSubmit.emit({{name}}Mapper.toOutput(this.form.value));
    }
}

class {{name}}Mapper {



    static toForm(input: {{name}}Input, form: FormGroup) {
        form.patchValue({
{{#controls}}
            {{modelName}}: input.{{modelName}},
{{/controls}}
        });
    }

    static toOutput(formVal: any): {{name}}Output {
        return {
{{#controls}}
            {{modelName}}: formVal.{{modelName}},
{{/controls}}
        };
    }
}